# Copyright Materialize, Inc. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.


# Map from host-port:internal port
#
# This mostly just shows all the ports that are available to the host system, if you want
# to change these you must restart the docker-compose cluster.
x-port-mappings:
  - &materialized 6875:6875
  - &grafana 3000:3000
  - &prometheus 9090:9090

version: '3.7'
services:
  kinesis:
    init: true
    mzbuild: kinesis
    depends_on: [materialized]

  materialized:
    mzbuild: materialized
    ports:
      - *materialized
    init: true
    command: -w 4
    environment:
      # you can for example add `pgwire=trace` or change `info` to `debug` to get more verbose logs
      - MZ_LOG=pgwire=debug,info
      # We want this to eventually count up to the size of the largest batch in an
      # arrangement. This number represents a tradeoff between proactive merging (which
      # takes time) and low latency.
      #
      # 1000 was chosen by fair dice roll
      - DIFFERENTIAL_EAGER_MERGE=1000

  # All the metrics containers
  #
  # These are ordered by high-level to low-level:
  #
  # * grafana is the primary dashboard system that we use
  # * prometheus is the high-level metrics aggregator which pings materialized
  # * There is a script that just loads the views that allows metrics to be collected
  #   quickly. TODO: we should experiment turning some of the views off and inlining them
  #   in the collector to see how much of a performance hit that is
  grafana:
    # upstream: https://hub.docker.com/r/grafana/grafana
    # docker config for grafana: https://grafana.com/docs/installation/docker/
    depends_on: [prometheus]
    init: true
    image: grafana/grafana:6.3.6
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/conf:/etc/grafana/provisioning
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
    ports:
      - *grafana
  prometheus:
    image: prom/prometheus:v2.12.0
    init: true
    ports:
      - *prometheus
    depends_on:
      - materialized
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus

volumes:
  grafana:
