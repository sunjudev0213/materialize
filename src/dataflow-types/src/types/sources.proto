// Copyright Materialize, Inc. and contributors. All rights reserved.
//
// Use of this software is governed by the Business Source License
// included in the LICENSE file.
//
// As of the Change Date specified in that file, in accordance with
// the Business Source License, use of this software will be governed
// by the Apache License, Version 2.0.

syntax = "proto3";

import "google/protobuf/empty.proto";

import "repr/src/row.proto";
import "dataflow-types/src/errors.proto";
import "dataflow-types/src/postgres_source.proto";
import "dataflow-types/src/types/aws.proto";

package mz_dataflow_types.types.sources;

message ProtoSourceData {
    oneof kind {
        mz_repr.row.ProtoRow ok = 1;
        errors.ProtoDataflowError err = 2;
    }
}

message ProtoKinesisSourceConnector {
    string stream_name = 1;
    mz_dataflow_types.types.aws.ProtoAwsConfig aws = 2;
}

message ProtoPostgresSourceConnector {
    string conn = 1;
    string publication = 2;
    string slot_name = 3;
    mz_dataflow_types.postgres_source.PostgresSourceDetails details = 4;
}

message ProtoPubNubSourceConnector {
    string subscribe_key = 1;
    string channel = 2;
}

message ProtoPersistSourceConnector {
    string consensus_uri = 1;
    string blob_uri = 2;
    string shard_id = 3;
}

message ProtoS3SourceConnector {
    repeated ProtoS3KeySource key_sources = 1;
    optional string pattern = 2;
    mz_dataflow_types.types.aws.ProtoAwsConfig aws = 3;
    ProtoCompression compression = 4;
}

message ProtoS3KeySource {
    oneof kind {
        string scan = 1;
        string sqs_notifications = 2;
    }
}

message ProtoCompression {
    oneof kind {
        google.protobuf.Empty gzip = 1;
        google.protobuf.Empty none = 2;
    }
}
