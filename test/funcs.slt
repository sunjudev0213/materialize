# Copyright 2019 Materialize, Inc. All rights reserved.
#
# This file is part of Materialize. Materialize may not be used or
# distributed without the express permission of Materialize, Inc.

mode cockroach

# Test date_trunc()

# TODO: PostgreSQL truncates trailing zeros from seconds, we do not.
# This test should return:  2019-11-26 15:56:46.24115
query T
SELECT date_trunc('microseconds', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2019-11-26 15:56:46.241150

query T
SELECT date_trunc('milliseconds', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2019-11-26 15:56:46.241

query T
SELECT date_trunc('second', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2019-11-26 15:56:46

query T
SELECT date_trunc('minute', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2019-11-26 15:56:00

query T
SELECT date_trunc('hour', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2019-11-26 15:00:00

query T
SELECT date_trunc('day', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2019-11-26 00:00:00

query T
SELECT date_trunc('week', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2019-11-25 00:00:00

query T
SELECT date_trunc('month', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2019-11-01 00:00:00

query T
SELECT date_trunc('quarter', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2019-10-01 00:00:00

query T
SELECT date_trunc('year', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2019-01-01 00:00:00

query T
SELECT date_trunc('decade', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2010-01-01 00:00:00

# Expects the first year of the century, meaning 2001 instead of 2000.
query T
SELECT date_trunc('century', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2001-01-01 00:00:00

# Expects the first year of the millennium, meaning 2001 instead of 2000.
query T
SELECT date_trunc('millennium', TIMESTAMP '2019-11-26 15:56:46.241150')
----
2001-01-01 00:00:00

query error invalid date_trunc precision: bad
SELECT date_trunc('bad', TIMESTAMP '2019-11-26 15:56:46.241150')

statement ok
CREATE TABLE date_trunc_fields (
    field text
)

statement ok
INSERT INTO date_trunc_fields VALUES ('day'), ('DaY'), ('month'), ('MoNTH'), ('bad')

query T rowsort
SELECT date_trunc(field, TIMESTAMP '2019-11-26 15:56:46.241150') FROM date_trunc_fields
----
2019-11-26 00:00:00
2019-11-26 00:00:00
2019-11-01 00:00:00
2019-11-01 00:00:00
NULL

mode standard

statement ok
CREATE TABLE date_trunc_timestamps (
    ts timestamp,
)

query T multiline
EXPLAIN PLAN FOR SELECT date_trunc('day', ts) FROM date_trunc_timestamps
----
Project {
  outputs: [1],
  Map {
    scalars: [date_trunc_day #0],
    Get { date_trunc_timestamps (u4) }
  }
}

query T multiline
EXPLAIN PLAN FOR SELECT date_trunc(field, ts) FROM date_trunc_fields, date_trunc_timestamps
----
Project {
  outputs: [2],
  Map {
    scalars: [#0 date_trunc #1],
    Join {
      variables: [],
      Get { date_trunc_fields (u1) },
      Get { date_trunc_timestamps (u4) }
    }
  }
}

mode cockroach

query R
SELECT floor(cast(1.1 AS DOUBLE PRECISION))
----
1

query R
SELECT floor(cast(1.1 AS float))
----
1

query RRRRR
SELECT floor(1.1), floor(1.111), floor(100.1), floor(100.11), floor(-4.1)
----
1.0 1.000 100.0 100.00 -5.0


query R
SELECT ceil(cast(1.1 AS DOUBLE PRECISION))
----
2

query R
SELECT ceil(cast(1.1 AS float))
----
2

query RRRRR
SELECT ceil(1.1), ceil(1.111), ceil(100.1), ceil(100.11), ceil(-4.1)
----
2.0 2.000 101.0 101.00 -4.0
