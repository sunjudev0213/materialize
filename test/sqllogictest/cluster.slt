# Copyright Materialize, Inc. and contributors. All rights reserved.
#
# Use of this software is governed by the Business Source License
# included in the LICENSE file at the root of this repository.
#
# As of the Change Date specified in that file, in accordance with
# the Business Source License, use of this software will be governed
# by the Apache License, Version 2.0.

# Basic tests of the `CREATE CLUSTER` and `DROP CLUSTER` DDL statements.

mode cockroach

# Creating a cluster without any options works.
statement ok
CREATE CLUSTER foo

statement error cluster 'foo' already exists
CREATE CLUSTER foo

# Creating a virtual cluster works.
statement ok
CREATE CLUSTER bar VIRTUAL

query TT rowsort
SELECT * FROM mz_clusters
----
1 default
2 foo
3 bar

# Creating a sized cluster should be rejected.
statement error SIZE not yet supported
CREATE CLUSTER baz SIZE 'small'

# Test invalid option combinations.

statement error VIRTUAL specified more than once
CREATE CLUSTER baz VIRTUAL, VIRTUAL

statement error SIZE specified more than once
CREATE CLUSTER baz SIZE 'small', SIZE 'medium'

statement error VIRTUAL and SIZE options cannot be specified together
CREATE CLUSTER baz VIRTUAL, SIZE 'small'

# Test invalid DROPs.

statement error active cluster cannot be dropped
DROP CLUSTER default

statement error unknown cluster 'baz'
DROP CLUSTER baz

# Test valid DROPs, which aren't yet supported.

statement error cannot yet drop clusters
DROP CLUSTER foo

# Test `cluster` session variable.

query T
SHOW cluster
----
default

statement ok
SET cluster = 'foo'

statement ok
CREATE MATERIALIZED VIEW v AS SELECT 1

query T
SELECT * FROM v
----
1

# Test invalid setting of `cluster`.

# It's okay to set the `cluster` variable to an invalid cluster.
statement ok
SET cluster = 'bad'

# But you can't do any reads on that cluster.
statement error unknown cluster 'bad'
SELECT * FROM v

# Nor can you create indexes on that cluster.
statement error unknown cluster 'bad'
CREATE MATERIALIZED VIEW v2 AS SELECT 1

# But you can create unmaterialized views on that cluster.
statement ok
CREATE VIEW unmat AS SELECT 1

# Test `CREATE INDEX ... IN CLUSTER`.

statement ok
CREATE DEFAULT INDEX IN CLUSTER foo ON v

statement error unknown cluster 'noexist'
CREATE DEFAULT INDEX IN CLUSTER noexist ON v

# TODO(clusters): write tests for SHOW CREATE INDEX and mz_indexes.
